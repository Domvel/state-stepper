{"version":3,"file":"state-stepper.component.js","sourceRoot":"","sources":["../../../src/components/state-stepper/state-stepper.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAExE,OAAO,QAAQ,MAAM,gCAAgC,CAAC;AACtD,OAAO,KAAK,MAAM,+BAA+B,CAAC;;;qBAiBvB;YACvB;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,OAAO;aACd;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,SAAS;aAChB;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,MAAM;aACb;SACF;yBAEW,CAAC;;IAEN,sCAAM,GAAb;QACE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KAC1B;IAEM,wCAAQ,GAAf;QACE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KAC1B;IAEM,yCAAS,GAAhB;QACE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACzB;IAEM,wCAAQ,GAAf,UAAgB,gBAAyB;;QAEvC,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE/C,WAAW,CAAC,KAAK,GAAG,gBAAgB,CAAC;QACrC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAE3B,IAAI,gBAAgB,KAAK,QAAQ,EAAE;YACjC,OAAO;SACR;;QAGD,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YACvC,OAAO;SACR;QACD,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QAClD,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAEM,qCAAK,GAAZ;QACE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SACjB,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAEO,kDAAkB,GAA1B;QAAA,iBAeC;QAdC,UAAU,CAAC;YACT,IAAM,OAAO,GAAG,KAAI,CAAC,cAAc,CAAC,aAA4B,CAAC;YACjE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAChD,IAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBACrC,IAAI,CAAC,cAAc,CAAC;wBAClB,QAAQ,EAAE,QAAQ;wBAClB,KAAK,EAAE,QAAQ;wBACf,MAAM,EAAE,QAAQ;qBACjB,CAAC,CAAC;oBACH,MAAM;iBACP;aACF;SACF,CAAC,CAAC;KACJ;;gBAxFF,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,CAAC,KAAK,CAAC;iBAChB;;;;mCAEE,SAAS,SAAC,SAAS;0BAEnB,KAAK;;gCApBR;;SAiBa,qBAAqB","sourcesContent":["import { Component, ViewChild, ElementRef, Input } from '@angular/core';\n\nimport template from './state-stepper.component.html';\nimport style from './state-stepper.component.css';\n\nexport interface Step {\n  icon: string;\n  text?: string;\n  state?: string;\n  active?: boolean;\n}\n\n@Component({\n  selector: 'state-stepper',\n  template: template,\n  styles: [style]\n})\nexport class StateStepperComponent {\n  @ViewChild('stepper') stepperElement: ElementRef;\n\n  @Input() steps: Step[] = [\n    {\n      icon: 'help',\n      text: 'Input'\n    },\n    {\n      icon: 'cog',\n      text: 'Process'\n    },\n    {\n      icon: 'checkmark',\n      text: 'Done'\n    }\n  ];\n\n  stepIndex = 0;\n\n  public stepOk() {\n    this.nextStep('success');\n  }\n\n  public stepWarn() {\n    this.nextStep('warning');\n  }\n\n  public stepError() {\n    this.nextStep('danger');\n  }\n\n  public nextStep(currentStepState?: string) {\n    // Current step.\n    const currentStep = this.steps[this.stepIndex];\n\n    currentStep.state = currentStepState;\n    currentStep.active = false;\n\n    if (currentStepState === 'danger') {\n      return;\n    }\n\n    // Next step.\n    this.stepIndex++;\n    if (this.stepIndex >= this.steps.length) {\n      this.stepIndex = this.steps.length - 1;\n      return;\n    }\n    const nextStep = this.steps[this.stepIndex];\n    this.steps.forEach(step => (step.active = false));\n    nextStep.active = true;\n    nextStep.state = 'current';\n\n    this.scrollToActiveStep();\n  }\n\n  public reset() {\n    this.stepIndex = 0;\n    this.steps.forEach(step => {\n      step.active = false;\n      step.state = '';\n    });\n    this.steps[0].active = true;\n    this.steps[0].state = 'current';\n    this.scrollToActiveStep();\n  }\n\n  private scrollToActiveStep() {\n    setTimeout(() => {\n      const element = this.stepperElement.nativeElement as HTMLElement;\n      for (let i = 0; i < element.children.length; i++) {\n        const step = element.children.item(i);\n        if (step.classList.contains('active')) {\n          step.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center'\n          });\n          break;\n        }\n      }\n    });\n  }\n}\n"]}